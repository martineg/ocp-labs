apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/instance: hello-flask
    app.kubernetes.io/name: hello-flask
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    pipeline.openshift.io/runtime: python
    pipeline.openshift.io/runtime-version: 3.11-ubi8
    pipeline.openshift.io/type: kubernetes
  name: hello-flask
  namespace: app1-dev
spec:
  params:
  - default: hello-flask
    name: APP_NAME
    type: string
  - default: https://github.com/martineg/ocp-labs/
    name: GIT_REPO
    type: string
  - default: main
    name: GIT_REVISION
    type: string
  - default: image-registry.openshift-image-registry.svc:5000/app1-dev/hello-flask
    name: IMAGE_NAME
    type: string
  - name: IMAGE_TAG
    type: string
    default: v1
  - default: s2i-flask
    name: PATH_CONTEXT
    type: string
  - default: 3.11-ubi9
    name: VERSION
    type: string
  - default: acs-token
    description: Secret containing the address:port tuple for ACS Central
    name: ACS_ENDPOINT
    type: string
  - default: acs-token
    description: Secret containing the ACS API token with CI permissions
    name: ACS_API_TOKEN
    type: string
  - default: resources/acs-lab/hello-flask-deployment/hello-flask-deployment.yaml
    description: Path to deployment artefact
    name: DEPLOYMENT_FILE
    type: string
  tasks:
  - name: fetch-repository
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_REVISION)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: workspace
  - name: build
    params:
    - name: IMAGE
      value: $(params.IMAGE_NAME)
    - name: TLSVERIFY
      value: "false"
    - name: PATH_CONTEXT
      value: $(params.PATH_CONTEXT)
    - name: VERSION
      value: $(params.VERSION)
    runAfter:
    - fetch-repository
    taskRef:
      kind: ClusterTask
      name: s2i-python
    workspaces:
    - name: source
      workspace: workspace
  - name: deploy
    params:
    - name: SCRIPT
      value: oc rollout status deploy/$(params.APP_NAME)
    runAfter:
    - stackrox-image-check
    taskRef:
      kind: ClusterTask
      name: openshift-client
  - name: stackrox-image-scan
    params:
    - name: rox_central_endpoint
      value: $(params.ACS_ENDPOINT)
    - name: rox_api_token
      value: $(params.ACS_API_TOKEN)
    - name: image
      value: $(params.IMAGE_NAME)
    - name: output_format
      value: json
    - name: insecure-skip-tls-verify
      value: "true"
    runAfter:
    - build
    taskRef:
      kind: Task
      name: stackrox-image-scan
  - name: stackrox-image-check
    params:
    - name: rox_central_endpoint
      value: $(params.ACS_ENDPOINT)
    - name: rox_api_token
      value: $(params.ACS_API_TOKEN)
    - name: image
      value: $(params.IMAGE_NAME)
    - name: insecure-skip-tls-verify
      value: "true"
    runAfter:
    - stackrox-image-scan
    taskRef:
      kind: Task
      name: stackrox-image-check
  - name: rox-deployment-check
    params:
    - name: rox_central_endpoint
      value: $(params.ACS_ENDPOINT)
    - name: rox_api_token
      value: $(params.ACS_API_TOKEN)
    - name: file
      value: $(params.DEPLOYMENT_FILE)
    runAfter:
    - stackrox-image-scan
    taskRef:
      kind: Task
      name: rox-deployment-check
    workspaces:
    - name: deployfiles
      workspace: workspace
  workspaces:
  - name: workspace
